
Application.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000072e  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000007a2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  00800060  00800060  000007a2  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000007a2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007d4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000260  00000000  00000000  00000810  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000199a  00000000  00000000  00000a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b40  00000000  00000000  0000240a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f25  00000000  00000000  00002f4a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000658  00000000  00000000  00003e70  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000855  00000000  00000000  000044c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e8c  00000000  00000000  00004d1d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d0  00000000  00000000  00005ba9  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 37 02 	jmp	0x46e	; 0x46e <__vector_1>
   8:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__vector_2>
   c:	0c 94 85 02 	jmp	0x50a	; 0x50a <__vector_3>
  10:	0c 94 51 03 	jmp	0x6a2	; 0x6a2 <__vector_4>
  14:	0c 94 28 03 	jmp	0x650	; 0x650 <__vector_5>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 ea 02 	jmp	0x5d4	; 0x5d4 <__vector_10>
  2c:	0c 94 c1 02 	jmp	0x582	; 0x582 <__vector_11>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__vector_16>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ee e2       	ldi	r30, 0x2E	; 46
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 95 03 	jmp	0x72a	; 0x72a <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:



int main(void) {
	
	UART_voidInit();
  92:	0e 94 7a 03 	call	0x6f4	; 0x6f4 <UART_voidInit>
	

	DC_MOTOR_voidMoveForward_1(70);
  96:	86 e4       	ldi	r24, 0x46	; 70
  98:	0e 94 85 00 	call	0x10a	; 0x10a <DC_MOTOR_voidMoveForward_1>
	DC_MOTOR_voidMoveForward_2(70);
  9c:	86 e4       	ldi	r24, 0x46	; 70
  9e:	0e 94 c2 00 	call	0x184	; 0x184 <DC_MOTOR_voidMoveForward_2>
	
	while(1){
		u8 data = UART_u8Rx();
  a2:	0e 94 91 03 	call	0x722	; 0x722 <UART_u8Rx>
		
		switch(data){
  a6:	8c 36       	cpi	r24, 0x6C	; 108
  a8:	31 f1       	breq	.+76     	; 0xf6 <main+0x64>
  aa:	18 f4       	brcc	.+6      	; 0xb2 <main+0x20>
  ac:	86 36       	cpi	r24, 0x66	; 102
  ae:	71 f0       	breq	.+28     	; 0xcc <main+0x3a>
  b0:	f8 cf       	rjmp	.-16     	; 0xa2 <main+0x10>
  b2:	82 37       	cpi	r24, 0x72	; 114
  b4:	b1 f0       	breq	.+44     	; 0xe2 <main+0x50>
  b6:	83 37       	cpi	r24, 0x73	; 115
  b8:	a1 f7       	brne	.-24     	; 0xa2 <main+0x10>
			case 's':
				DC_MOTOR_voidStop_1();
  ba:	0e 94 a5 00 	call	0x14a	; 0x14a <DC_MOTOR_voidStop_1>
				DC_MOTOR_voidStop_2();
  be:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <DC_MOTOR_voidStop_2>
				LED_voidOn(DIO_PORTC,DIO_PIN2);
  c2:	62 e0       	ldi	r22, 0x02	; 2
  c4:	82 e0       	ldi	r24, 0x02	; 2
  c6:	0e 94 ff 00 	call	0x1fe	; 0x1fe <LED_voidOn>
				break;
  ca:	eb cf       	rjmp	.-42     	; 0xa2 <main+0x10>
			case 'f':
				DC_MOTOR_voidMoveForward_1(70);
  cc:	86 e4       	ldi	r24, 0x46	; 70
  ce:	0e 94 85 00 	call	0x10a	; 0x10a <DC_MOTOR_voidMoveForward_1>
				DC_MOTOR_voidMoveForward_2(70);
  d2:	86 e4       	ldi	r24, 0x46	; 70
  d4:	0e 94 c2 00 	call	0x184	; 0x184 <DC_MOTOR_voidMoveForward_2>
				LED_voidOff(DIO_PORTC,DIO_PIN2);
  d8:	62 e0       	ldi	r22, 0x02	; 2
  da:	82 e0       	ldi	r24, 0x02	; 2
  dc:	0e 94 0e 01 	call	0x21c	; 0x21c <LED_voidOff>
				break;
  e0:	e0 cf       	rjmp	.-64     	; 0xa2 <main+0x10>
				
			case 'r':
				DC_MOTOR_voidMoveForward_1(70);
  e2:	86 e4       	ldi	r24, 0x46	; 70
  e4:	0e 94 85 00 	call	0x10a	; 0x10a <DC_MOTOR_voidMoveForward_1>
				DC_MOTOR_voidStop_2();
  e8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <DC_MOTOR_voidStop_2>
				LED_voidOff(DIO_PORTC,DIO_PIN2);
  ec:	62 e0       	ldi	r22, 0x02	; 2
  ee:	82 e0       	ldi	r24, 0x02	; 2
  f0:	0e 94 0e 01 	call	0x21c	; 0x21c <LED_voidOff>
				
				break;
  f4:	d6 cf       	rjmp	.-84     	; 0xa2 <main+0x10>
			case 'l':
				DC_MOTOR_voidMoveForward_2(70);
  f6:	86 e4       	ldi	r24, 0x46	; 70
  f8:	0e 94 c2 00 	call	0x184	; 0x184 <DC_MOTOR_voidMoveForward_2>
				DC_MOTOR_voidStop_1();
  fc:	0e 94 a5 00 	call	0x14a	; 0x14a <DC_MOTOR_voidStop_1>
				LED_voidOff(DIO_PORTC,DIO_PIN2);
 100:	62 e0       	ldi	r22, 0x02	; 2
 102:	82 e0       	ldi	r24, 0x02	; 2
 104:	0e 94 0e 01 	call	0x21c	; 0x21c <LED_voidOff>
 108:	cc cf       	rjmp	.-104    	; 0xa2 <main+0x10>

0000010a <DC_MOTOR_voidMoveForward_1>:
	DIO_voidSetPinDir(DC_MOTOR_H_A4_PORT,DC_MOTOR_H_A4_PIN,OUTPUT);
	
	TIM0_voidFastPWM(copy_u8speed);
	DIO_voidSetPinVal(DC_MOTOR_H_A3_PORT,DC_MOTOR_H_A3_PIN,LOW);
	DIO_voidSetPinVal(DC_MOTOR_H_A4_PORT,DC_MOTOR_H_A4_PIN,HIGH);
}
 10a:	cf 93       	push	r28
 10c:	c8 2f       	mov	r28, r24
 10e:	41 e0       	ldi	r20, 0x01	; 1
 110:	64 e0       	ldi	r22, 0x04	; 4
 112:	83 e0       	ldi	r24, 0x03	; 3
 114:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 118:	41 e0       	ldi	r20, 0x01	; 1
 11a:	63 e0       	ldi	r22, 0x03	; 3
 11c:	82 e0       	ldi	r24, 0x02	; 2
 11e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 122:	41 e0       	ldi	r20, 0x01	; 1
 124:	64 e0       	ldi	r22, 0x04	; 4
 126:	82 e0       	ldi	r24, 0x02	; 2
 128:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 12c:	8c 2f       	mov	r24, r28
 12e:	0e 94 13 03 	call	0x626	; 0x626 <TIM2_voidFastPWM>
 132:	41 e0       	ldi	r20, 0x01	; 1
 134:	63 e0       	ldi	r22, 0x03	; 3
 136:	82 e0       	ldi	r24, 0x02	; 2
 138:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
 13c:	40 e0       	ldi	r20, 0x00	; 0
 13e:	64 e0       	ldi	r22, 0x04	; 4
 140:	82 e0       	ldi	r24, 0x02	; 2
 142:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <DC_MOTOR_voidStop_1>:
 14a:	41 e0       	ldi	r20, 0x01	; 1
 14c:	64 e0       	ldi	r22, 0x04	; 4
 14e:	83 e0       	ldi	r24, 0x03	; 3
 150:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 154:	41 e0       	ldi	r20, 0x01	; 1
 156:	63 e0       	ldi	r22, 0x03	; 3
 158:	82 e0       	ldi	r24, 0x02	; 2
 15a:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 15e:	41 e0       	ldi	r20, 0x01	; 1
 160:	64 e0       	ldi	r22, 0x04	; 4
 162:	82 e0       	ldi	r24, 0x02	; 2
 164:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 168:	80 e0       	ldi	r24, 0x00	; 0
 16a:	0e 94 13 03 	call	0x626	; 0x626 <TIM2_voidFastPWM>
 16e:	40 e0       	ldi	r20, 0x00	; 0
 170:	63 e0       	ldi	r22, 0x03	; 3
 172:	82 e0       	ldi	r24, 0x02	; 2
 174:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
 178:	40 e0       	ldi	r20, 0x00	; 0
 17a:	64 e0       	ldi	r22, 0x04	; 4
 17c:	82 e0       	ldi	r24, 0x02	; 2
 17e:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
 182:	08 95       	ret

00000184 <DC_MOTOR_voidMoveForward_2>:
 184:	cf 93       	push	r28
 186:	c8 2f       	mov	r28, r24
 188:	41 e0       	ldi	r20, 0x01	; 1
 18a:	63 e0       	ldi	r22, 0x03	; 3
 18c:	81 e0       	ldi	r24, 0x01	; 1
 18e:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 192:	41 e0       	ldi	r20, 0x01	; 1
 194:	65 e0       	ldi	r22, 0x05	; 5
 196:	82 e0       	ldi	r24, 0x02	; 2
 198:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 19c:	41 e0       	ldi	r20, 0x01	; 1
 19e:	66 e0       	ldi	r22, 0x06	; 6
 1a0:	82 e0       	ldi	r24, 0x02	; 2
 1a2:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 1a6:	8c 2f       	mov	r24, r28
 1a8:	0e 94 ac 02 	call	0x558	; 0x558 <TIM0_voidFastPWM>
 1ac:	41 e0       	ldi	r20, 0x01	; 1
 1ae:	65 e0       	ldi	r22, 0x05	; 5
 1b0:	82 e0       	ldi	r24, 0x02	; 2
 1b2:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	66 e0       	ldi	r22, 0x06	; 6
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
 1c0:	cf 91       	pop	r28
 1c2:	08 95       	ret

000001c4 <DC_MOTOR_voidStop_2>:

void DC_MOTOR_voidStop_2(void){
	DIO_voidSetPinDir(DC_MOTOR_H_EN2_PORT,DC_MOTOR_H_EN2_PIN,OUTPUT);
 1c4:	41 e0       	ldi	r20, 0x01	; 1
 1c6:	63 e0       	ldi	r22, 0x03	; 3
 1c8:	81 e0       	ldi	r24, 0x01	; 1
 1ca:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DC_MOTOR_H_A3_PORT,DC_MOTOR_H_A3_PIN,OUTPUT);
 1ce:	41 e0       	ldi	r20, 0x01	; 1
 1d0:	65 e0       	ldi	r22, 0x05	; 5
 1d2:	82 e0       	ldi	r24, 0x02	; 2
 1d4:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
	DIO_voidSetPinDir(DC_MOTOR_H_A4_PORT,DC_MOTOR_H_A4_PIN,OUTPUT);
 1d8:	41 e0       	ldi	r20, 0x01	; 1
 1da:	66 e0       	ldi	r22, 0x06	; 6
 1dc:	82 e0       	ldi	r24, 0x02	; 2
 1de:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
	
	TIM0_voidFastPWM(0);
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	0e 94 ac 02 	call	0x558	; 0x558 <TIM0_voidFastPWM>
	DIO_voidSetPinVal(DC_MOTOR_H_A3_PORT,DC_MOTOR_H_A3_PIN,LOW);
 1e8:	40 e0       	ldi	r20, 0x00	; 0
 1ea:	65 e0       	ldi	r22, 0x05	; 5
 1ec:	82 e0       	ldi	r24, 0x02	; 2
 1ee:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
	DIO_voidSetPinVal(DC_MOTOR_H_A4_PORT,DC_MOTOR_H_A4_PIN,LOW);
 1f2:	40 e0       	ldi	r20, 0x00	; 0
 1f4:	66 e0       	ldi	r22, 0x06	; 6
 1f6:	82 e0       	ldi	r24, 0x02	; 2
 1f8:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
 1fc:	08 95       	ret

000001fe <LED_voidOn>:
 1fe:	cf 93       	push	r28
 200:	df 93       	push	r29
 202:	c8 2f       	mov	r28, r24
 204:	d6 2f       	mov	r29, r22
 206:	41 e0       	ldi	r20, 0x01	; 1
 208:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 20c:	41 e0       	ldi	r20, 0x01	; 1
 20e:	6d 2f       	mov	r22, r29
 210:	8c 2f       	mov	r24, r28
 212:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
 216:	df 91       	pop	r29
 218:	cf 91       	pop	r28
 21a:	08 95       	ret

0000021c <LED_voidOff>:
 21c:	cf 93       	push	r28
 21e:	df 93       	push	r29
 220:	c8 2f       	mov	r28, r24
 222:	d6 2f       	mov	r29, r22
 224:	41 e0       	ldi	r20, 0x01	; 1
 226:	0e 94 51 01 	call	0x2a2	; 0x2a2 <DIO_voidSetPinDir>
 22a:	40 e0       	ldi	r20, 0x00	; 0
 22c:	6d 2f       	mov	r22, r29
 22e:	8c 2f       	mov	r24, r28
 230:	0e 94 c4 01 	call	0x388	; 0x388 <DIO_voidSetPinVal>
 234:	df 91       	pop	r29
 236:	cf 91       	pop	r28
 238:	08 95       	ret

0000023a <__vector_16>:
 23a:	1f 92       	push	r1
 23c:	0f 92       	push	r0
 23e:	0f b6       	in	r0, 0x3f	; 63
 240:	0f 92       	push	r0
 242:	11 24       	eor	r1, r1
 244:	2f 93       	push	r18
 246:	3f 93       	push	r19
 248:	4f 93       	push	r20
 24a:	5f 93       	push	r21
 24c:	6f 93       	push	r22
 24e:	7f 93       	push	r23
 250:	8f 93       	push	r24
 252:	9f 93       	push	r25
 254:	af 93       	push	r26
 256:	bf 93       	push	r27
 258:	ef 93       	push	r30
 25a:	ff 93       	push	r31
 25c:	e0 91 62 00 	lds	r30, 0x0062	; 0x800062 <ADC_INT_PTR>
 260:	f0 91 63 00 	lds	r31, 0x0063	; 0x800063 <ADC_INT_PTR+0x1>
 264:	30 97       	sbiw	r30, 0x00	; 0
 266:	61 f0       	breq	.+24     	; 0x280 <__vector_16+0x46>
 268:	a0 91 60 00 	lds	r26, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 26c:	b0 91 61 00 	lds	r27, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 270:	84 b1       	in	r24, 0x04	; 4
 272:	95 b1       	in	r25, 0x05	; 5
 274:	8d 93       	st	X+, r24
 276:	9c 93       	st	X, r25
 278:	09 95       	icall
 27a:	86 b1       	in	r24, 0x06	; 6
 27c:	87 7f       	andi	r24, 0xF7	; 247
 27e:	86 b9       	out	0x06, r24	; 6
 280:	ff 91       	pop	r31
 282:	ef 91       	pop	r30
 284:	bf 91       	pop	r27
 286:	af 91       	pop	r26
 288:	9f 91       	pop	r25
 28a:	8f 91       	pop	r24
 28c:	7f 91       	pop	r23
 28e:	6f 91       	pop	r22
 290:	5f 91       	pop	r21
 292:	4f 91       	pop	r20
 294:	3f 91       	pop	r19
 296:	2f 91       	pop	r18
 298:	0f 90       	pop	r0
 29a:	0f be       	out	0x3f, r0	; 63
 29c:	0f 90       	pop	r0
 29e:	1f 90       	pop	r1
 2a0:	18 95       	reti

000002a2 <DIO_voidSetPinDir>:
 2a2:	42 30       	cpi	r20, 0x02	; 2
 2a4:	08 f0       	brcs	.+2      	; 0x2a8 <DIO_voidSetPinDir+0x6>
 2a6:	6f c0       	rjmp	.+222    	; 0x386 <DIO_voidSetPinDir+0xe4>
 2a8:	41 30       	cpi	r20, 0x01	; 1
 2aa:	a1 f5       	brne	.+104    	; 0x314 <DIO_voidSetPinDir+0x72>
 2ac:	81 30       	cpi	r24, 0x01	; 1
 2ae:	89 f0       	breq	.+34     	; 0x2d2 <DIO_voidSetPinDir+0x30>
 2b0:	28 f0       	brcs	.+10     	; 0x2bc <DIO_voidSetPinDir+0x1a>
 2b2:	82 30       	cpi	r24, 0x02	; 2
 2b4:	c9 f0       	breq	.+50     	; 0x2e8 <DIO_voidSetPinDir+0x46>
 2b6:	83 30       	cpi	r24, 0x03	; 3
 2b8:	11 f1       	breq	.+68     	; 0x2fe <DIO_voidSetPinDir+0x5c>
 2ba:	08 95       	ret
 2bc:	2a b3       	in	r18, 0x1a	; 26
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_voidSetPinDir+0x26>
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	6a 95       	dec	r22
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_voidSetPinDir+0x22>
 2cc:	82 2b       	or	r24, r18
 2ce:	8a bb       	out	0x1a, r24	; 26
 2d0:	08 95       	ret
 2d2:	27 b3       	in	r18, 0x17	; 23
 2d4:	81 e0       	ldi	r24, 0x01	; 1
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	02 c0       	rjmp	.+4      	; 0x2de <DIO_voidSetPinDir+0x3c>
 2da:	88 0f       	add	r24, r24
 2dc:	99 1f       	adc	r25, r25
 2de:	6a 95       	dec	r22
 2e0:	e2 f7       	brpl	.-8      	; 0x2da <DIO_voidSetPinDir+0x38>
 2e2:	82 2b       	or	r24, r18
 2e4:	87 bb       	out	0x17, r24	; 23
 2e6:	08 95       	ret
 2e8:	24 b3       	in	r18, 0x14	; 20
 2ea:	81 e0       	ldi	r24, 0x01	; 1
 2ec:	90 e0       	ldi	r25, 0x00	; 0
 2ee:	02 c0       	rjmp	.+4      	; 0x2f4 <DIO_voidSetPinDir+0x52>
 2f0:	88 0f       	add	r24, r24
 2f2:	99 1f       	adc	r25, r25
 2f4:	6a 95       	dec	r22
 2f6:	e2 f7       	brpl	.-8      	; 0x2f0 <DIO_voidSetPinDir+0x4e>
 2f8:	82 2b       	or	r24, r18
 2fa:	84 bb       	out	0x14, r24	; 20
 2fc:	08 95       	ret
 2fe:	21 b3       	in	r18, 0x11	; 17
 300:	81 e0       	ldi	r24, 0x01	; 1
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	02 c0       	rjmp	.+4      	; 0x30a <DIO_voidSetPinDir+0x68>
 306:	88 0f       	add	r24, r24
 308:	99 1f       	adc	r25, r25
 30a:	6a 95       	dec	r22
 30c:	e2 f7       	brpl	.-8      	; 0x306 <DIO_voidSetPinDir+0x64>
 30e:	82 2b       	or	r24, r18
 310:	81 bb       	out	0x11, r24	; 17
 312:	08 95       	ret
 314:	41 11       	cpse	r20, r1
 316:	37 c0       	rjmp	.+110    	; 0x386 <DIO_voidSetPinDir+0xe4>
 318:	81 30       	cpi	r24, 0x01	; 1
 31a:	91 f0       	breq	.+36     	; 0x340 <DIO_voidSetPinDir+0x9e>
 31c:	28 f0       	brcs	.+10     	; 0x328 <DIO_voidSetPinDir+0x86>
 31e:	82 30       	cpi	r24, 0x02	; 2
 320:	d9 f0       	breq	.+54     	; 0x358 <DIO_voidSetPinDir+0xb6>
 322:	83 30       	cpi	r24, 0x03	; 3
 324:	29 f1       	breq	.+74     	; 0x370 <DIO_voidSetPinDir+0xce>
 326:	08 95       	ret
 328:	2a b3       	in	r18, 0x1a	; 26
 32a:	81 e0       	ldi	r24, 0x01	; 1
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	02 c0       	rjmp	.+4      	; 0x334 <DIO_voidSetPinDir+0x92>
 330:	88 0f       	add	r24, r24
 332:	99 1f       	adc	r25, r25
 334:	6a 95       	dec	r22
 336:	e2 f7       	brpl	.-8      	; 0x330 <DIO_voidSetPinDir+0x8e>
 338:	80 95       	com	r24
 33a:	82 23       	and	r24, r18
 33c:	8a bb       	out	0x1a, r24	; 26
 33e:	08 95       	ret
 340:	27 b3       	in	r18, 0x17	; 23
 342:	81 e0       	ldi	r24, 0x01	; 1
 344:	90 e0       	ldi	r25, 0x00	; 0
 346:	02 c0       	rjmp	.+4      	; 0x34c <DIO_voidSetPinDir+0xaa>
 348:	88 0f       	add	r24, r24
 34a:	99 1f       	adc	r25, r25
 34c:	6a 95       	dec	r22
 34e:	e2 f7       	brpl	.-8      	; 0x348 <DIO_voidSetPinDir+0xa6>
 350:	80 95       	com	r24
 352:	82 23       	and	r24, r18
 354:	87 bb       	out	0x17, r24	; 23
 356:	08 95       	ret
 358:	24 b3       	in	r18, 0x14	; 20
 35a:	81 e0       	ldi	r24, 0x01	; 1
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	02 c0       	rjmp	.+4      	; 0x364 <DIO_voidSetPinDir+0xc2>
 360:	88 0f       	add	r24, r24
 362:	99 1f       	adc	r25, r25
 364:	6a 95       	dec	r22
 366:	e2 f7       	brpl	.-8      	; 0x360 <DIO_voidSetPinDir+0xbe>
 368:	80 95       	com	r24
 36a:	82 23       	and	r24, r18
 36c:	84 bb       	out	0x14, r24	; 20
 36e:	08 95       	ret
 370:	21 b3       	in	r18, 0x11	; 17
 372:	81 e0       	ldi	r24, 0x01	; 1
 374:	90 e0       	ldi	r25, 0x00	; 0
 376:	02 c0       	rjmp	.+4      	; 0x37c <DIO_voidSetPinDir+0xda>
 378:	88 0f       	add	r24, r24
 37a:	99 1f       	adc	r25, r25
 37c:	6a 95       	dec	r22
 37e:	e2 f7       	brpl	.-8      	; 0x378 <DIO_voidSetPinDir+0xd6>
 380:	80 95       	com	r24
 382:	82 23       	and	r24, r18
 384:	81 bb       	out	0x11, r24	; 17
 386:	08 95       	ret

00000388 <DIO_voidSetPinVal>:
 388:	42 30       	cpi	r20, 0x02	; 2
 38a:	08 f0       	brcs	.+2      	; 0x38e <DIO_voidSetPinVal+0x6>
 38c:	6f c0       	rjmp	.+222    	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 38e:	41 30       	cpi	r20, 0x01	; 1
 390:	a1 f5       	brne	.+104    	; 0x3fa <DIO_voidSetPinVal+0x72>
 392:	81 30       	cpi	r24, 0x01	; 1
 394:	89 f0       	breq	.+34     	; 0x3b8 <DIO_voidSetPinVal+0x30>
 396:	28 f0       	brcs	.+10     	; 0x3a2 <DIO_voidSetPinVal+0x1a>
 398:	82 30       	cpi	r24, 0x02	; 2
 39a:	c9 f0       	breq	.+50     	; 0x3ce <DIO_voidSetPinVal+0x46>
 39c:	83 30       	cpi	r24, 0x03	; 3
 39e:	11 f1       	breq	.+68     	; 0x3e4 <DIO_voidSetPinVal+0x5c>
 3a0:	08 95       	ret
 3a2:	2b b3       	in	r18, 0x1b	; 27
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	90 e0       	ldi	r25, 0x00	; 0
 3a8:	02 c0       	rjmp	.+4      	; 0x3ae <DIO_voidSetPinVal+0x26>
 3aa:	88 0f       	add	r24, r24
 3ac:	99 1f       	adc	r25, r25
 3ae:	6a 95       	dec	r22
 3b0:	e2 f7       	brpl	.-8      	; 0x3aa <DIO_voidSetPinVal+0x22>
 3b2:	82 2b       	or	r24, r18
 3b4:	8b bb       	out	0x1b, r24	; 27
 3b6:	08 95       	ret
 3b8:	28 b3       	in	r18, 0x18	; 24
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	02 c0       	rjmp	.+4      	; 0x3c4 <DIO_voidSetPinVal+0x3c>
 3c0:	88 0f       	add	r24, r24
 3c2:	99 1f       	adc	r25, r25
 3c4:	6a 95       	dec	r22
 3c6:	e2 f7       	brpl	.-8      	; 0x3c0 <DIO_voidSetPinVal+0x38>
 3c8:	82 2b       	or	r24, r18
 3ca:	88 bb       	out	0x18, r24	; 24
 3cc:	08 95       	ret
 3ce:	25 b3       	in	r18, 0x15	; 21
 3d0:	81 e0       	ldi	r24, 0x01	; 1
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <DIO_voidSetPinVal+0x52>
 3d6:	88 0f       	add	r24, r24
 3d8:	99 1f       	adc	r25, r25
 3da:	6a 95       	dec	r22
 3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <DIO_voidSetPinVal+0x4e>
 3de:	82 2b       	or	r24, r18
 3e0:	85 bb       	out	0x15, r24	; 21
 3e2:	08 95       	ret
 3e4:	22 b3       	in	r18, 0x12	; 18
 3e6:	81 e0       	ldi	r24, 0x01	; 1
 3e8:	90 e0       	ldi	r25, 0x00	; 0
 3ea:	02 c0       	rjmp	.+4      	; 0x3f0 <DIO_voidSetPinVal+0x68>
 3ec:	88 0f       	add	r24, r24
 3ee:	99 1f       	adc	r25, r25
 3f0:	6a 95       	dec	r22
 3f2:	e2 f7       	brpl	.-8      	; 0x3ec <DIO_voidSetPinVal+0x64>
 3f4:	82 2b       	or	r24, r18
 3f6:	82 bb       	out	0x12, r24	; 18
 3f8:	08 95       	ret
 3fa:	41 11       	cpse	r20, r1
 3fc:	37 c0       	rjmp	.+110    	; 0x46c <__EEPROM_REGION_LENGTH__+0x6c>
 3fe:	81 30       	cpi	r24, 0x01	; 1
 400:	91 f0       	breq	.+36     	; 0x426 <__EEPROM_REGION_LENGTH__+0x26>
 402:	28 f0       	brcs	.+10     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 404:	82 30       	cpi	r24, 0x02	; 2
 406:	d9 f0       	breq	.+54     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 408:	83 30       	cpi	r24, 0x03	; 3
 40a:	29 f1       	breq	.+74     	; 0x456 <__EEPROM_REGION_LENGTH__+0x56>
 40c:	08 95       	ret
 40e:	2b b3       	in	r18, 0x1b	; 27
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	02 c0       	rjmp	.+4      	; 0x41a <__EEPROM_REGION_LENGTH__+0x1a>
 416:	88 0f       	add	r24, r24
 418:	99 1f       	adc	r25, r25
 41a:	6a 95       	dec	r22
 41c:	e2 f7       	brpl	.-8      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 41e:	80 95       	com	r24
 420:	82 23       	and	r24, r18
 422:	8b bb       	out	0x1b, r24	; 27
 424:	08 95       	ret
 426:	28 b3       	in	r18, 0x18	; 24
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	90 e0       	ldi	r25, 0x00	; 0
 42c:	02 c0       	rjmp	.+4      	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	6a 95       	dec	r22
 434:	e2 f7       	brpl	.-8      	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 436:	80 95       	com	r24
 438:	82 23       	and	r24, r18
 43a:	88 bb       	out	0x18, r24	; 24
 43c:	08 95       	ret
 43e:	25 b3       	in	r18, 0x15	; 21
 440:	81 e0       	ldi	r24, 0x01	; 1
 442:	90 e0       	ldi	r25, 0x00	; 0
 444:	02 c0       	rjmp	.+4      	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 446:	88 0f       	add	r24, r24
 448:	99 1f       	adc	r25, r25
 44a:	6a 95       	dec	r22
 44c:	e2 f7       	brpl	.-8      	; 0x446 <__EEPROM_REGION_LENGTH__+0x46>
 44e:	80 95       	com	r24
 450:	82 23       	and	r24, r18
 452:	85 bb       	out	0x15, r24	; 21
 454:	08 95       	ret
 456:	22 b3       	in	r18, 0x12	; 18
 458:	81 e0       	ldi	r24, 0x01	; 1
 45a:	90 e0       	ldi	r25, 0x00	; 0
 45c:	02 c0       	rjmp	.+4      	; 0x462 <__EEPROM_REGION_LENGTH__+0x62>
 45e:	88 0f       	add	r24, r24
 460:	99 1f       	adc	r25, r25
 462:	6a 95       	dec	r22
 464:	e2 f7       	brpl	.-8      	; 0x45e <__EEPROM_REGION_LENGTH__+0x5e>
 466:	80 95       	com	r24
 468:	82 23       	and	r24, r18
 46a:	82 bb       	out	0x12, r24	; 18
 46c:	08 95       	ret

0000046e <__vector_1>:
 46e:	1f 92       	push	r1
 470:	0f 92       	push	r0
 472:	0f b6       	in	r0, 0x3f	; 63
 474:	0f 92       	push	r0
 476:	11 24       	eor	r1, r1
 478:	2f 93       	push	r18
 47a:	3f 93       	push	r19
 47c:	4f 93       	push	r20
 47e:	5f 93       	push	r21
 480:	6f 93       	push	r22
 482:	7f 93       	push	r23
 484:	8f 93       	push	r24
 486:	9f 93       	push	r25
 488:	af 93       	push	r26
 48a:	bf 93       	push	r27
 48c:	ef 93       	push	r30
 48e:	ff 93       	push	r31
 490:	e0 91 64 00 	lds	r30, 0x0064	; 0x800064 <INT_PTR>
 494:	f0 91 65 00 	lds	r31, 0x0065	; 0x800065 <INT_PTR+0x1>
 498:	09 95       	icall
 49a:	ff 91       	pop	r31
 49c:	ef 91       	pop	r30
 49e:	bf 91       	pop	r27
 4a0:	af 91       	pop	r26
 4a2:	9f 91       	pop	r25
 4a4:	8f 91       	pop	r24
 4a6:	7f 91       	pop	r23
 4a8:	6f 91       	pop	r22
 4aa:	5f 91       	pop	r21
 4ac:	4f 91       	pop	r20
 4ae:	3f 91       	pop	r19
 4b0:	2f 91       	pop	r18
 4b2:	0f 90       	pop	r0
 4b4:	0f be       	out	0x3f, r0	; 63
 4b6:	0f 90       	pop	r0
 4b8:	1f 90       	pop	r1
 4ba:	18 95       	reti

000004bc <__vector_2>:
 4bc:	1f 92       	push	r1
 4be:	0f 92       	push	r0
 4c0:	0f b6       	in	r0, 0x3f	; 63
 4c2:	0f 92       	push	r0
 4c4:	11 24       	eor	r1, r1
 4c6:	2f 93       	push	r18
 4c8:	3f 93       	push	r19
 4ca:	4f 93       	push	r20
 4cc:	5f 93       	push	r21
 4ce:	6f 93       	push	r22
 4d0:	7f 93       	push	r23
 4d2:	8f 93       	push	r24
 4d4:	9f 93       	push	r25
 4d6:	af 93       	push	r26
 4d8:	bf 93       	push	r27
 4da:	ef 93       	push	r30
 4dc:	ff 93       	push	r31
 4de:	e0 91 66 00 	lds	r30, 0x0066	; 0x800066 <INT_PTR+0x2>
 4e2:	f0 91 67 00 	lds	r31, 0x0067	; 0x800067 <INT_PTR+0x3>
 4e6:	09 95       	icall
 4e8:	ff 91       	pop	r31
 4ea:	ef 91       	pop	r30
 4ec:	bf 91       	pop	r27
 4ee:	af 91       	pop	r26
 4f0:	9f 91       	pop	r25
 4f2:	8f 91       	pop	r24
 4f4:	7f 91       	pop	r23
 4f6:	6f 91       	pop	r22
 4f8:	5f 91       	pop	r21
 4fa:	4f 91       	pop	r20
 4fc:	3f 91       	pop	r19
 4fe:	2f 91       	pop	r18
 500:	0f 90       	pop	r0
 502:	0f be       	out	0x3f, r0	; 63
 504:	0f 90       	pop	r0
 506:	1f 90       	pop	r1
 508:	18 95       	reti

0000050a <__vector_3>:
 50a:	1f 92       	push	r1
 50c:	0f 92       	push	r0
 50e:	0f b6       	in	r0, 0x3f	; 63
 510:	0f 92       	push	r0
 512:	11 24       	eor	r1, r1
 514:	2f 93       	push	r18
 516:	3f 93       	push	r19
 518:	4f 93       	push	r20
 51a:	5f 93       	push	r21
 51c:	6f 93       	push	r22
 51e:	7f 93       	push	r23
 520:	8f 93       	push	r24
 522:	9f 93       	push	r25
 524:	af 93       	push	r26
 526:	bf 93       	push	r27
 528:	ef 93       	push	r30
 52a:	ff 93       	push	r31
 52c:	e0 91 68 00 	lds	r30, 0x0068	; 0x800068 <INT_PTR+0x4>
 530:	f0 91 69 00 	lds	r31, 0x0069	; 0x800069 <INT_PTR+0x5>
 534:	09 95       	icall
 536:	ff 91       	pop	r31
 538:	ef 91       	pop	r30
 53a:	bf 91       	pop	r27
 53c:	af 91       	pop	r26
 53e:	9f 91       	pop	r25
 540:	8f 91       	pop	r24
 542:	7f 91       	pop	r23
 544:	6f 91       	pop	r22
 546:	5f 91       	pop	r21
 548:	4f 91       	pop	r20
 54a:	3f 91       	pop	r19
 54c:	2f 91       	pop	r18
 54e:	0f 90       	pop	r0
 550:	0f be       	out	0x3f, r0	; 63
 552:	0f 90       	pop	r0
 554:	1f 90       	pop	r1
 556:	18 95       	reti

00000558 <TIM0_voidFastPWM>:
 558:	93 b7       	in	r25, 0x33	; 51
 55a:	90 64       	ori	r25, 0x40	; 64
 55c:	93 bf       	out	0x33, r25	; 51
 55e:	93 b7       	in	r25, 0x33	; 51
 560:	98 60       	ori	r25, 0x08	; 8
 562:	93 bf       	out	0x33, r25	; 51
 564:	93 b7       	in	r25, 0x33	; 51
 566:	90 62       	ori	r25, 0x20	; 32
 568:	93 bf       	out	0x33, r25	; 51
 56a:	93 b7       	in	r25, 0x33	; 51
 56c:	9f 7e       	andi	r25, 0xEF	; 239
 56e:	93 bf       	out	0x33, r25	; 51
 570:	93 b7       	in	r25, 0x33	; 51
 572:	98 7f       	andi	r25, 0xF8	; 248
 574:	93 bf       	out	0x33, r25	; 51
 576:	93 b7       	in	r25, 0x33	; 51
 578:	93 60       	ori	r25, 0x03	; 3
 57a:	93 bf       	out	0x33, r25	; 51
 57c:	88 0f       	add	r24, r24
 57e:	8c bf       	out	0x3c, r24	; 60
 580:	08 95       	ret

00000582 <__vector_11>:
 582:	1f 92       	push	r1
 584:	0f 92       	push	r0
 586:	0f b6       	in	r0, 0x3f	; 63
 588:	0f 92       	push	r0
 58a:	11 24       	eor	r1, r1
 58c:	2f 93       	push	r18
 58e:	3f 93       	push	r19
 590:	4f 93       	push	r20
 592:	5f 93       	push	r21
 594:	6f 93       	push	r22
 596:	7f 93       	push	r23
 598:	8f 93       	push	r24
 59a:	9f 93       	push	r25
 59c:	af 93       	push	r26
 59e:	bf 93       	push	r27
 5a0:	ef 93       	push	r30
 5a2:	ff 93       	push	r31
 5a4:	e0 91 6a 00 	lds	r30, 0x006A	; 0x80006a <TIM0_PTR>
 5a8:	f0 91 6b 00 	lds	r31, 0x006B	; 0x80006b <TIM0_PTR+0x1>
 5ac:	30 97       	sbiw	r30, 0x00	; 0
 5ae:	09 f0       	breq	.+2      	; 0x5b2 <__vector_11+0x30>
 5b0:	09 95       	icall
 5b2:	ff 91       	pop	r31
 5b4:	ef 91       	pop	r30
 5b6:	bf 91       	pop	r27
 5b8:	af 91       	pop	r26
 5ba:	9f 91       	pop	r25
 5bc:	8f 91       	pop	r24
 5be:	7f 91       	pop	r23
 5c0:	6f 91       	pop	r22
 5c2:	5f 91       	pop	r21
 5c4:	4f 91       	pop	r20
 5c6:	3f 91       	pop	r19
 5c8:	2f 91       	pop	r18
 5ca:	0f 90       	pop	r0
 5cc:	0f be       	out	0x3f, r0	; 63
 5ce:	0f 90       	pop	r0
 5d0:	1f 90       	pop	r1
 5d2:	18 95       	reti

000005d4 <__vector_10>:
 5d4:	1f 92       	push	r1
 5d6:	0f 92       	push	r0
 5d8:	0f b6       	in	r0, 0x3f	; 63
 5da:	0f 92       	push	r0
 5dc:	11 24       	eor	r1, r1
 5de:	2f 93       	push	r18
 5e0:	3f 93       	push	r19
 5e2:	4f 93       	push	r20
 5e4:	5f 93       	push	r21
 5e6:	6f 93       	push	r22
 5e8:	7f 93       	push	r23
 5ea:	8f 93       	push	r24
 5ec:	9f 93       	push	r25
 5ee:	af 93       	push	r26
 5f0:	bf 93       	push	r27
 5f2:	ef 93       	push	r30
 5f4:	ff 93       	push	r31
 5f6:	e0 91 6c 00 	lds	r30, 0x006C	; 0x80006c <TIM0_PTR+0x2>
 5fa:	f0 91 6d 00 	lds	r31, 0x006D	; 0x80006d <TIM0_PTR+0x3>
 5fe:	30 97       	sbiw	r30, 0x00	; 0
 600:	09 f0       	breq	.+2      	; 0x604 <__vector_10+0x30>
 602:	09 95       	icall
 604:	ff 91       	pop	r31
 606:	ef 91       	pop	r30
 608:	bf 91       	pop	r27
 60a:	af 91       	pop	r26
 60c:	9f 91       	pop	r25
 60e:	8f 91       	pop	r24
 610:	7f 91       	pop	r23
 612:	6f 91       	pop	r22
 614:	5f 91       	pop	r21
 616:	4f 91       	pop	r20
 618:	3f 91       	pop	r19
 61a:	2f 91       	pop	r18
 61c:	0f 90       	pop	r0
 61e:	0f be       	out	0x3f, r0	; 63
 620:	0f 90       	pop	r0
 622:	1f 90       	pop	r1
 624:	18 95       	reti

00000626 <TIM2_voidFastPWM>:
 626:	95 b5       	in	r25, 0x25	; 37
 628:	90 64       	ori	r25, 0x40	; 64
 62a:	95 bd       	out	0x25, r25	; 37
 62c:	95 b5       	in	r25, 0x25	; 37
 62e:	98 60       	ori	r25, 0x08	; 8
 630:	95 bd       	out	0x25, r25	; 37
 632:	95 b5       	in	r25, 0x25	; 37
 634:	90 62       	ori	r25, 0x20	; 32
 636:	95 bd       	out	0x25, r25	; 37
 638:	95 b5       	in	r25, 0x25	; 37
 63a:	9f 7e       	andi	r25, 0xEF	; 239
 63c:	95 bd       	out	0x25, r25	; 37
 63e:	95 b5       	in	r25, 0x25	; 37
 640:	98 7f       	andi	r25, 0xF8	; 248
 642:	95 bd       	out	0x25, r25	; 37
 644:	95 b5       	in	r25, 0x25	; 37
 646:	93 60       	ori	r25, 0x03	; 3
 648:	95 bd       	out	0x25, r25	; 37
 64a:	88 0f       	add	r24, r24
 64c:	83 bd       	out	0x23, r24	; 35
 64e:	08 95       	ret

00000650 <__vector_5>:
 650:	1f 92       	push	r1
 652:	0f 92       	push	r0
 654:	0f b6       	in	r0, 0x3f	; 63
 656:	0f 92       	push	r0
 658:	11 24       	eor	r1, r1
 65a:	2f 93       	push	r18
 65c:	3f 93       	push	r19
 65e:	4f 93       	push	r20
 660:	5f 93       	push	r21
 662:	6f 93       	push	r22
 664:	7f 93       	push	r23
 666:	8f 93       	push	r24
 668:	9f 93       	push	r25
 66a:	af 93       	push	r26
 66c:	bf 93       	push	r27
 66e:	ef 93       	push	r30
 670:	ff 93       	push	r31
 672:	e0 91 6e 00 	lds	r30, 0x006E	; 0x80006e <TIM2_PTR>
 676:	f0 91 6f 00 	lds	r31, 0x006F	; 0x80006f <TIM2_PTR+0x1>
 67a:	30 97       	sbiw	r30, 0x00	; 0
 67c:	09 f0       	breq	.+2      	; 0x680 <__vector_5+0x30>
 67e:	09 95       	icall
 680:	ff 91       	pop	r31
 682:	ef 91       	pop	r30
 684:	bf 91       	pop	r27
 686:	af 91       	pop	r26
 688:	9f 91       	pop	r25
 68a:	8f 91       	pop	r24
 68c:	7f 91       	pop	r23
 68e:	6f 91       	pop	r22
 690:	5f 91       	pop	r21
 692:	4f 91       	pop	r20
 694:	3f 91       	pop	r19
 696:	2f 91       	pop	r18
 698:	0f 90       	pop	r0
 69a:	0f be       	out	0x3f, r0	; 63
 69c:	0f 90       	pop	r0
 69e:	1f 90       	pop	r1
 6a0:	18 95       	reti

000006a2 <__vector_4>:
 6a2:	1f 92       	push	r1
 6a4:	0f 92       	push	r0
 6a6:	0f b6       	in	r0, 0x3f	; 63
 6a8:	0f 92       	push	r0
 6aa:	11 24       	eor	r1, r1
 6ac:	2f 93       	push	r18
 6ae:	3f 93       	push	r19
 6b0:	4f 93       	push	r20
 6b2:	5f 93       	push	r21
 6b4:	6f 93       	push	r22
 6b6:	7f 93       	push	r23
 6b8:	8f 93       	push	r24
 6ba:	9f 93       	push	r25
 6bc:	af 93       	push	r26
 6be:	bf 93       	push	r27
 6c0:	ef 93       	push	r30
 6c2:	ff 93       	push	r31
 6c4:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <TIM2_PTR+0x2>
 6c8:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <TIM2_PTR+0x3>
 6cc:	30 97       	sbiw	r30, 0x00	; 0
 6ce:	09 f0       	breq	.+2      	; 0x6d2 <__vector_4+0x30>
 6d0:	09 95       	icall
 6d2:	ff 91       	pop	r31
 6d4:	ef 91       	pop	r30
 6d6:	bf 91       	pop	r27
 6d8:	af 91       	pop	r26
 6da:	9f 91       	pop	r25
 6dc:	8f 91       	pop	r24
 6de:	7f 91       	pop	r23
 6e0:	6f 91       	pop	r22
 6e2:	5f 91       	pop	r21
 6e4:	4f 91       	pop	r20
 6e6:	3f 91       	pop	r19
 6e8:	2f 91       	pop	r18
 6ea:	0f 90       	pop	r0
 6ec:	0f be       	out	0x3f, r0	; 63
 6ee:	0f 90       	pop	r0
 6f0:	1f 90       	pop	r1
 6f2:	18 95       	reti

000006f4 <UART_voidInit>:
void UART_voidTx(u8 copy_u8data){
	/* Wait for empty transmit buffer */
	while ( !(	UCSRA_REG & (1<<UDRE_)) );
	
	/* Put data into buffer, sends the data */
	UDR_REG = copy_u8data;
 6f4:	87 e6       	ldi	r24, 0x67	; 103
 6f6:	89 b9       	out	0x09, r24	; 9
 6f8:	80 b5       	in	r24, 0x20	; 32
 6fa:	8f 7b       	andi	r24, 0xBF	; 191
 6fc:	80 bd       	out	0x20, r24	; 32
 6fe:	80 b5       	in	r24, 0x20	; 32
 700:	8f 7c       	andi	r24, 0xCF	; 207
 702:	80 bd       	out	0x20, r24	; 32
 704:	80 b5       	in	r24, 0x20	; 32
 706:	80 bd       	out	0x20, r24	; 32
 708:	80 b5       	in	r24, 0x20	; 32
 70a:	87 7f       	andi	r24, 0xF7	; 247
 70c:	80 bd       	out	0x20, r24	; 32
 70e:	80 b5       	in	r24, 0x20	; 32
 710:	86 68       	ori	r24, 0x86	; 134
 712:	80 bd       	out	0x20, r24	; 32
 714:	8a b1       	in	r24, 0x0a	; 10
 716:	80 61       	ori	r24, 0x10	; 16
 718:	8a b9       	out	0x0a, r24	; 10
 71a:	8a b1       	in	r24, 0x0a	; 10
 71c:	88 60       	ori	r24, 0x08	; 8
 71e:	8a b9       	out	0x0a, r24	; 10
 720:	08 95       	ret

00000722 <UART_u8Rx>:
* Parameters   : void
* Return value : u8
*****************************************************************************/
u8 UART_u8Rx(void){
	/* Wait for data to be received */
	while ( !(UCSRA_REG & (1<<RXC_)) );
 722:	5f 9b       	sbis	0x0b, 7	; 11
 724:	fe cf       	rjmp	.-4      	; 0x722 <UART_u8Rx>
	
	/* Get and return received data from buffer */
	return UDR_REG;
 726:	8c b1       	in	r24, 0x0c	; 12
 728:	08 95       	ret

0000072a <_exit>:
 72a:	f8 94       	cli

0000072c <__stop_program>:
 72c:	ff cf       	rjmp	.-2      	; 0x72c <__stop_program>
